<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PacketSnoop.Views"
        xmlns:converters="clr-namespace:PacketSnoop.Converters"
        xmlns:ViewModels="clr-namespace:PacketSnoop.ViewModels" x:Class="PacketSnoop.Views.Client"
        mc:Ignorable="d"
        Title="Client" Height="350" Width="525">
    <Window.DataContext>
        <ViewModels:ClientViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <converters:BoolToStringConverter TrueValue="Stop" FalseValue="Start" x:Key="BoolToStopStartConverter"/>
            <converters:ByteArrayToHexConverter x:Key="ByteArrayToHexConverter"/>
            <Style TargetType="Button">
                <Setter Property="MinWidth" Value="60"/>
                <Setter Property="Margin" Value="4,6"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <DataGrid ItemsSource="{Binding Packets}" AutoGenerateColumns="False" SelectionUnit="FullRow" HeadersVisibility="Column" VerticalContentAlignment="Center">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Address">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Address}" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Port">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Port}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Contents">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Datagram, Converter={StaticResource ByteArrayToHexConverter}}" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Interval">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Interval}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="{Binding IsRunning.Value, Converter={StaticResource BoolToStopStartConverter}}" Command="{Binding ToggleRunning}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsRunning.Value}" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.GradientActiveCaptionColorKey}}"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="State2">
                            <Setter Property="Background" Value="Green"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Resources>
                <ResourceDictionary>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{x:Null}" />
                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
                                <Setter Property="BorderBrush" Value="{x:Null}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </DataGrid.Resources>
        </DataGrid>
    </Grid>
</Window>
